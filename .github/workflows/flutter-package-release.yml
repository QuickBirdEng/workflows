name: Flutter Package Release Workflow
env:
  ENVIRONMENT_FILE: .env

on:
  workflow_call:
    inputs:
      working-directory:
        description: "the directory to run each job of the workflow in"
        type: string
        default: "."
      git-lfs:
        description: "Checkout the project with git lfs"
        type: boolean
        default: false
      slack-channel-id:
        description: "The slack channel id to send the message to"
        type: string
        required: true
      package-name:
        description: "The name of the package"
        type: string
        required: true
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    # runs-on: [self-hosted]
    runs-on: default-k8s-runner
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: QuickBirdEng/actions/setup-flutter@main
        with:
          working-directory: ${{ inputs.working-directory }}
      - run: flutter analyze

  test:
    # runs-on: [self-hosted, Linux]
    runs-on: default-k8s-runner
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: QuickBirdEng/actions/setup-flutter@main
        with:
          working-directory: ${{ inputs.working-directory }}
      - run: flutter test --dart-define STAGE=mock

  test-coverage:
    runs-on: default-k8s-runner
    # runs-on: [self-hosted, Linux]
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: QuickBirdEng/actions/setup-environment@main
      - uses: QuickBirdEng/actions/setup-flutter@main
        with:
          working-directory: ${{ inputs.working-directory }}
        if: ${{ env.CODE_COVERAGE != '' && env.CODE_COVERAGE != 0 }}
      - run: flutter test --coverage --dart-define STAGE=mock
        if: ${{ env.CODE_COVERAGE != '' && env.CODE_COVERAGE != 0 }}
      - uses: QuickBirdEng/actions/flutter-coverage@main
        with:
          path: ${{ env.CODE_COVERAGE_FILE_PATH }}
          min_coverage: ${{ env.CODE_COVERAGE }}
          exclude: ${{ env.CODE_COVERAGE_EXLUDE_FILE }}
        if: ${{ env.CODE_COVERAGE != '' && env.CODE_COVERAGE != 0 }}

  slack-update-success:
    # runs-on: [self-hosted, Linux]
    runs-on: default-k8s-runner
    needs: [lint, test]
    steps:
      - name: Notify slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          errors: true
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }} 
          payload: | 
            "channel": "${{ inputs.slack-channel-id }}"
            "text": "${{ inputs.package-name }} successfully released version ${{ github.ref }}"

  slack-update-failure:
    # runs-on: [self-hosted, Linux]
    runs-on: default-k8s-runner
    if: ${{ failure() }}
    needs: [lint, test]
    steps:
      - name: Notify slack
        uses: slackapi/slack-github-action@v2.1.1
        with:
          errors: true
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: | 
            "channel": "${{ inputs.slack-channel-id }}"
            "text": "${{ inputs.package-name }} failed to release version ${{ github.ref }}"
