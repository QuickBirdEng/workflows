name: Manual Release Workflow

on:
  workflow_call:
    inputs:
      lfs:
        description: 'Whether to use LFS for the artifacts'
        type: boolean
        default: false
      ndk:
        description: 'Should use NDK for the build'
        type: boolean
        default: false

env:
  ENVIRONMENT_FILE: .env

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-bundle-manual-release
  cancel-in-progress: true

jobs:
  generate-build-number:
    runs-on: [self-hosted]
    outputs:
      build-number: ${{ steps.build-number-generator.outputs.build-number }}
    steps:
      - name: Generate Build Number
        id: build-number-generator
        run: |
          build_number=$(date +%s)
          echo "build-number=$build_number" >> $GITHUB_OUTPUT
          echo "Build Number: $build_number"

  android-publish:
    runs-on: [self-hosted, Linux]
    needs: [generate-build-number]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: ${{ inputs.lfs }}
      - uses: nttld/setup-ndk@v1
        if: ${{ inputs.ndk == true }}
        with:
          ndk-version: r25c
      - run: echo "BuildForRelease=true" >> $GITHUB_ENV
      - uses: QuickBirdEng/actions/setup-version@main
        with:
          build-number: ${{ needs.generate-build-number.outputs.build-number }}
      - uses: QuickBirdEng/actions/setup-android@main
        with:
          key-store-file-content: ${{ secrets.ANDROID_KEYSTORE_FILE_CONTENT }}
          key-store-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          signing-key-alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          signing-key-password: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
      - name: Setup API Key (if secret is set)
        shell: bash
        run: |
          if [[ '${{ secrets.RAW_API_KEY }}' != '' ]]; then
            echo "RAW_API_KEY=${{ secrets.RAW_API_KEY }}" >> .env.credentials
          fi
      - name: Generate APK
        shell: bash
        run: ./gradlew assembleRelease
      - name: "Publishing to apps.quickbirdstudios.com"
        uses: QuickBirdEng/actions/qb-publish@main
        with:
          upload-key: ${{ secrets.UPLOAD_KEY }}
          file: app/build/outputs/apk/release/app-release.apk

  android-bundle:
    runs-on: [self-hosted, Linux]
    needs: [generate-build-number]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: ${{ inputs.lfs }}
      - uses: nttld/setup-ndk@v1
        if: ${{ inputs.ndk == true }}
        with:
          ndk-version: r25c
      - run: echo "BuildForRelease=true" >> $GITHUB_ENV
      - uses: QuickBirdEng/actions/setup-version@main
        with:
          build-number: ${{ needs.generate-build-number.outputs.build-number }}
      - uses: QuickBirdEng/actions/setup-android@main
        with:
          key-store-file-content: ${{ secrets.ANDROID_KEYSTORE_FILE_CONTENT }}
          key-store-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          signing-key-alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          signing-key-password: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
      - name: Setup API Key (if secret is set)
        shell: bash
        run: |
          if [[ '${{ secrets.RAW_API_KEY }}' != '' ]]; then
            echo "RAW_API_KEY=${{ secrets.RAW_API_KEY }}" >> .env.credentials
          fi
      - name: Generate Bundle (.aab)
        shell: bash
        run: ./gradlew bundleRelease
      - name: Compress & Upload Artifact to QB Spaces
        uses: QuickBirdEng/actions/compress-and-upload-artifact-qb@main
        with:
          access-key: ${{ secrets.DO_ACCESS_KEY }}
          secret-key: ${{ secrets.DO_SECRET_KEY }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          name-suffix: android
          artifact-path: app/build/outputs/bundle/release/app-release.aab
