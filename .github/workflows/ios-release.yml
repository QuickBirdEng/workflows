name: iOS Release Workflow
env:
  ENVIRONMENT_FILE: .env

on:
  workflow_call:
    inputs:
      run-check-version-job:
        description: 'Run check version job'
        type: boolean
        default: false
      fastlane-action-name:
        description: 'Value can be test or build'
        type: string
        required: true
      working-directory:
        description: 'the directory to run each job of the workflow in'
        type: string
        default: '.'
      git-lfs:
        description: "Checkout the project with git lfs"
        type: boolean
        default: false
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-release
  cancel-in-progress: true

jobs:
  check_version:
    runs-on: [self-hosted, MacOS]
    if: inputs.run-check-version-job == true
    continue-on-error: true
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@v1
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: QuickBirdEng/actions/setup-ios@v1
      - uses: QuickBirdEng/actions/setup-fastlane@v1
        with:
          working-directory: ${{ inputs.working-directory }}
      - shell: bash -l {0}
        run: gem install bundler && bundle update

      - name: Setup API Key (if secret is set)
        shell: bash
        run: |
          if [[ '${{ secrets.RAW_API_KEY }}' != '' ]]; then
            echo "API_KEY=${{ secrets.RAW_API_KEY }}" > Secrets.xcconfig
          fi
      - shell: bash -l {0}
        env:
          APPLE_AUTH_KEY_ID: ${{ secrets.APPLE_AUTH_KEY_ID }}
          APPLE_AUTH_KEY_ISSUER_ID: ${{ secrets.APPLE_AUTH_KEY_ISSUER_ID }}
          APPLE_AUTH_KEY_CONTENT: ${{ secrets.APPLE_AUTH_KEY_CONTENT }}
          APPLE_AUTH_KEY_ENCODING: "base64"
        run: fastlane check_version
  common:
    uses: QuickBirdEng/workflows/.github/workflows/ios-common.yml@v1
    needs: [check_version]
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    with:
      fastlane-action-name: ${{ inputs.fastlane-action-name }}
    secrets: inherit
  publish:
    runs-on: [self-hosted, MacOS]
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    if: always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled')
    needs: [common, check_version]
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@v1
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: QuickBirdEng/actions/setup-ios@v1
      - uses: QuickBirdEng/actions/setup-fastlane@v1
        with:
          working-directory: ${{ inputs.working-directory }}
      - uses: QuickBirdEng/actions/setup-fastlane-environment@v1
        with:
          match-repository: ${{ secrets.MATCH_REPO }}
          match-password: ${{ secrets.MATCH_PASSWORD }}
          match-apple-id: ${{ secrets.APPLE_ID }}
          match-apple-team-id: ${{ secrets.APPLE_TEAM_ID }}
          apple-auth-key-id: ${{ secrets.APPLE_AUTH_KEY_ID }}
          apple-auth-key-issuer-id: ${{ secrets.APPLE_AUTH_KEY_ISSUER_ID }}
          apple-auth-key-content: ${{ secrets.APPLE_AUTH_KEY_CONTENT }}
          apple-auth-key-encoding: "base64"
          slack-slug: ${{ secrets.SLACK_SLUG }}
      - shell: bash -l {0}
        run: gem install bundler && bundle update
      - name: Setup API Key (if secret is set)
        shell: bash
        run: |
          if [[ '${{ secrets.RAW_API_KEY }}' != '' ]]; then
            echo "API_KEY=${{ secrets.RAW_API_KEY }}" > Secrets.xcconfig
          fi
      - name: Upload to TestFlight
        id: release
        shell: bash -l {0}
        run: |
          set -eo pipefail && bundle exec fastlane release | tee fastlane.log
          xcarchive_path=$(cat fastlane.log | grep -o '\XCArchive Path => .*' | sed -e 's/XCArchive Path => //g')
          echo "xcarchive-path=$xcarchive_path" >> $GITHUB_OUTPUT
      - name: Compress & Upload Artifact to QB Spaces
        if: ${{ github.ref_type == 'tag' }}
        uses: QuickBirdEng/actions/compress-and-upload-artifact-qb@v1
        with:
          access-key: ${{ secrets.DO_ACCESS_KEY }}
          secret-key: ${{ secrets.DO_SECRET_KEY }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          name-suffix: ios
          artifact-path: ${{ steps.release.outputs.xcarchive-path }}
