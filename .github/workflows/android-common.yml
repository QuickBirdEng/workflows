name: Android Branch Workflow
env:
  ENVIRONMENT_FILE: .env

on:
  workflow_call:
    inputs:
      build-number:
        description: 'Build Number'
        type: string
        required: false
      lfs:
        description: 'Whether to use LFS for the artifacts'
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unitTests:
    runs-on: [self-hosted, Linux]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: ${{ inputs.lfs }}
      - uses: QuickBirdEng/actions/setup-android-for-build@main
      - name: Setup API Key (if secret is set)
        shell: bash
        run: |
          if [[ '${{ secrets.RAW_API_KEY }}' != '' ]]; then
            echo "RAW_API_KEY=${{ secrets.RAW_API_KEY }}" >> .env.credentials
          fi
      - run: ./gradlew test
  androidTests:
    runs-on: [self-hosted, Linux, android]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: ${{ inputs.lfs }}
      - uses: QuickBirdEng/actions/setup-android-for-build@main
      - name: Setup API Key (if secret is set)
        shell: bash -l {0}
        run: |
          if [[ '${{ secrets.RAW_API_KEY }}' != '' ]]; then
            echo "RAW_API_KEY=${{ secrets.RAW_API_KEY }}" >> .env.credentials
          fi
      - run: ./gradlew cAT
  android-publish:
      runs-on: [self-hosted, Linux]
      needs: [unitTests, androidTests]
      steps:
        - uses: actions/checkout@v3
          with:
            lfs: ${{ inputs.lfs }}
        - run: echo "BuildForRelease=true" >> $GITHUB_ENV
        - uses: QuickBirdEng/actions/setup-version@main
          with:
            build-number: ${{ inputs.build-number }}
        - uses: QuickBirdEng/actions/setup-android@main
          with:
            key-store-file-content: ${{ secrets.ANDROID_KEYSTORE_FILE_CONTENT }}
            key-store-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
            signing-key-alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
            signing-key-password: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
        - name: Setup API Key (if secret is set)
          shell: bash
          run: |
            if [[ '${{ secrets.RAW_API_KEY }}' != '' ]]; then
              echo "RAW_API_KEY=${{ secrets.RAW_API_KEY }}" >> .env.credentials
            fi
        - name: Generate APK
          shell: bash
          run: ./gradlew assembleRelease
