name: iOS Branch Workflow
env:
  ENVIRONMENT_FILE: .env

on:
  workflow_call:
    inputs:
      working-directory:
        description: 'the directory to run each job of the workflow in'
        type: string
        default: '.'
      git-lfs:
        description: "Checkout the project with git lfs"
        type: boolean
        default: false
      workspace-path:
        description: "The path to the workspace file"
        type: string
        required: true
      scheme-name:
        description: 'Scheme name'
        type: string
        required: true
      test-scheme-name:
        description: "The name of the test scheme"
        type: string
        required: true
      test-simulator-device-name:
        description: "The device spec for the test"
        type: string
        required: true
      test-simulator-device-version:
        description: "The device version for the test"
        type: string
        required: true
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-branch
  cancel-in-progress: true

jobs:
  generate-build-number:
    runs-on: [self-hosted]
    outputs:
      build-number: ${{ steps.build-number-generator.outputs.build-number }}
    steps:
      - name: Generate Build Number
        id: build-number-generator
        run: |
          build_number=$(date +%s)
          echo "build-number=$build_number" >> $GITHUB_OUTPUT
          echo "Build Number: $build_number"
  lint:
    runs-on: [self-hosted, macOS]
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: irgaly/setup-mint@v1
        with:
          mint-executable-directory: ./mint-bin
      - run: ./mint-bin/mint run xcodegen
      - run: ./mint-bin/mint run swiftlint swiftlint
  test:
    runs-on: [self-hosted, macOS]
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: irgaly/setup-mint@v1
        with:
          mint-executable-directory: ./mint-bin
      - run: ./mint-bin/mint run xcodegen
      - run: xcodebuild test -workspace ${{ inputs.workspace-path }} -scheme ${{ inputs.test-scheme-name }} -destination 'platform=iOS Simulator,name=${{ inputs.test-simulator-device-name }},OS=${{ inputs.test-simulator-device-version }}' -enableCodeCoverage YES -quiet
  build-ios:
    runs-on: [self-hosted, macOS]
    needs: [generate-build-number, test, lint]
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: irgaly/setup-mint@v1
        with:
          mint-executable-directory: ./mint-bin
      - run: ./mint-bin/mint run xcodegen
      - uses: QuickBirdEng/actions/native-ios-build@update-ios-workflows
        with:
          build-number: ${{ needs.generate-build-number.outputs.build-number }}
          working-directory: ${{ inputs.working-directory }}
          workspace-path: ${{ inputs.workspace-path }}
          scheme-name: ${{ inputs.scheme-name }}
          code-sign: false
