name: Flutter Manual Deploy Workflow
env:
  ENVIRONMENT_FILE: .env

on:
  workflow_call:
    inputs:
      ios-build-arguments:
        description: "any extra arguments such as using sksl or passing a variable using --dart-define etc. for iOS build"
        type: string
        required: false
      android-build-arguments:
        description: "any extra arguments such as using sksl or passing a variable using --dart-define etc. for Android build"
        type: string
        required: false
      publish-to-testflight:
        description: "Should publish to Testflight?"
        type: boolean
        default: false
      working-directory:
        description: "the directory to run each job of the workflow in"
        type: string
        default: "."
      submit-ios-build-for-review:
        description: 'Submit TestFlight Build for Review'
        type: boolean
        default: false
      git-lfs:
        description: "Checkout the project with git lfs"
        type: boolean
        default: false
      obfuscate:
        description: "Obfuscate dart code"
        type: boolean
        default: false
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-build-number:
    runs-on: [self-hosted]
    outputs:
      build-number: ${{ steps.build-number-generator.outputs.build-number }}
    steps:
      - name: Generate Build Number
        id: build-number-generator
        run: |
          build_number=$(date +%s)
          echo "build-number=$build_number" >> $GITHUB_OUTPUT
          echo "Build Number: $build_number"
  ios-name-suffix-generation:
    runs-on: [self-hosted]
    outputs:
      name-suffix: ${{ steps.name-suffix-generator.outputs.name-suffix }}
    steps:
      - id: name-suffix-generator
        uses: QuickBirdEng/actions/flutter-name-suffix-generator@main
        with:
          platform: ios
          build-arguments: ${{ inputs.ios-build-arguments }}

  android-name-suffix-generation:
    runs-on: [self-hosted]
    outputs:
      name-suffix: ${{ steps.name-suffix-generator.outputs.name-suffix }}
    if: contains(inputs.android-build-arguments, 'PRODUCTION')
    steps:
      - id: name-suffix-generator
        uses: QuickBirdEng/actions/flutter-name-suffix-generator@main
        with:
          platform: android
          build-arguments: ${{ inputs.android-build-arguments }}

  android-publish:
    runs-on: [self-hosted, Linux]
    needs: [generate-build-number]
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: QuickBirdEng/actions/publish-android@feature/dart-obfusication
        with:
          clean: false
          build-number: ${{ needs.generate-build-number.outputs.build-number }}
          build-arguments: ${{ inputs.android-build-arguments }}
          working-directory: ${{ inputs.working-directory }}
          key-store-file-content: ${{ secrets.ANDROID_KEYSTORE_FILE_CONTENT }}
          key-store-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          signing-key-alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          signing-key-password: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
          qbs-maven-username: ${{ secrets.QBS_DEV_MAVEN_USERNAME }}
          qbs-maven-password: ${{ secrets.QBS_DEV_MAVEN_PASSWORD }}
          upload-key: ${{ secrets.UPLOAD_KEY }}
          obfuscate: ${{ inputs.obfuscate }}
          sentry-url: ${{ secrets.SENTRY_URL }}
          sentry-org: ${{ secrets.SENTRY_ORG }}
          sentry-project: ${{ secrets.SENTRY_PROJECT }}
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}  

  ios-publish:
    runs-on: [self-hosted, macOS]
    needs: [generate-build-number, ios-name-suffix-generation]
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: QuickBirdEng/actions/setup-ios@main
      - uses: QuickBirdEng/actions/flutter-build@feature/dart-obfusication
        id: build
        with:
          build-type: ipa
          build-number: ${{ needs.generate-build-number.outputs.build-number }}
          build-arguments: --no-codesign ${{ inputs.ios-build-arguments }}
          clean: true
          working-directory: ${{ inputs.working-directory }}
          obfuscate: ${{ inputs.obfuscate }} 
          sentry-url: ${{ secrets.SENTRY_URL }}
          sentry-org: ${{ secrets.SENTRY_ORG }}
          sentry-project: ${{ secrets.SENTRY_PROJECT }}
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}  
      - uses: QuickBirdEng/actions/upload-debug-symbols-to-sentry@main
        env:
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        if: ${{ env.SENTRY_PROJECT != '' }}
        with:
          url: ${{ secrets.SENTRY_URL }}
          organization: ${{ secrets.SENTRY_ORG }}
          project: ${{ secrets.SENTRY_PROJECT }}
          auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          xc-archive-path: ${{ steps.build.outputs.artifact-path }}
        continue-on-error: true 
      - uses: QuickBirdEng/actions/publish-ios@main
        with:
          apple-auth-key-id: ${{ secrets.APPLE_AUTH_KEY_ID }}
          apple-auth-key-issuer-id: ${{ secrets.APPLE_AUTH_KEY_ISSUER_ID }}
          apple-auth-key-content: ${{ secrets.APPLE_AUTH_KEY_CONTENT }}
          apple-auth-key-encoding: "base64"
          upload-key: ${{ secrets.UPLOAD_KEY }}
          publish-to-testflight: ${{ inputs.publish-to-testflight }}
          match-password: ${{ secrets.MATCH_PASSWORD }}
          match-repository: ${{ secrets.MATCH_REPO }}
          match-apple-id: ${{ secrets.APPLE_ID }}
          match-apple-team-id: ${{ secrets.APPLE_TEAM_ID }}
          match-keychain-password: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          build-number: ${{ needs.generate-build-number.outputs.build-number }}
          slack-slug: ${{ secrets.SLACK_SLUG }}
          working-directory: ${{ inputs.working-directory }}
          release-notes: ${{ inputs.ios-build-arguments }}
          submit-for-review: ${{ inputs.submit-ios-build-for-review }}
      - name: Compress & Upload Artifact to QB Spaces
        if: contains(inputs.android-build-arguments, 'PRODUCTION')
        uses: QuickBirdEng/actions/compress-and-upload-artifact-qb@main
        with:
          access-key: ${{ secrets.DO_ACCESS_KEY }}
          secret-key: ${{ secrets.DO_SECRET_KEY }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          name-suffix: ${{ needs.ios-name-suffix-generation.outputs.name-suffix }}
          artifact-path: ${{ steps.build.outputs.artifact-path }}

  android-bundle:
    runs-on: [self-hosted, Linux]
    needs: [generate-build-number, android-name-suffix-generation]
    steps:
      - uses: QuickBirdEng/actions/checkout-ssh@main
        with:
          ssh-private-key: ${{ secrets.CI_SSH_PRIVATE_KEY_FOR_GITHUB_PRIVATE_REPOS }}
          git-lfs: ${{ inputs.git-lfs }}
      - uses: QuickBirdEng/actions/setup-android@main
        with:
          key-store-file-content: ${{ secrets.ANDROID_KEYSTORE_FILE_CONTENT }}
          key-store-password: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          signing-key-alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          signing-key-password: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
          qbs-maven-username: ${{ secrets.QBS_DEV_MAVEN_USERNAME }}
          qbs-maven-password: ${{ secrets.QBS_DEV_MAVEN_PASSWORD }}
      - uses: QuickBirdEng/actions/flutter-build@feature/dart-obfusication
        id: flutter-build
        with:
          clean: true
          build-type: appbundle
          build-number: ${{ needs.generate-build-number.outputs.build-number }}
          build-arguments: ${{ inputs.android-build-arguments }}
          working-directory: ${{ inputs.working-directory }}
          obfuscate: ${{ inputs.obfuscate }}
          sentry-url: ${{ secrets.SENTRY_URL }}
          sentry-org: ${{ secrets.SENTRY_ORG }}
          sentry-project: ${{ secrets.SENTRY_PROJECT }}
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}  
      - name: Compress & Upload Artifact to QB Spaces
        uses: QuickBirdEng/actions/compress-and-upload-artifact-qb@main
        with:
          access-key: ${{ secrets.DO_ACCESS_KEY }}
          secret-key: ${{ secrets.DO_SECRET_KEY }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          name-suffix: ${{ needs.android-name-suffix-generation.outputs.name-suffix }}
          artifact-path: ${{ steps.flutter-build.outputs.artifact-path }}
